name: "Release"
on:
  push:
    tags:
      - "*"
env:
  php-version: 8.3
  cache-version: 1
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup PHP"
        uses: shivammathur/setup-php@2.32.0
        with:
          php-version: ${{ env.php-version }}
          coverage: none

      - name: "Cache Composer dependencies"
        uses: actions/cache@v4
        with:
          path: "~/.composer/cache"
          key: composer-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('composer.json') }}
          restore-keys: |
            composer-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('composer.json') }}
            composer-dependencies-${{ runner.os }}-${{ env.cache-version }}-

      - name: "Install Composer dependencies"
        run: |
          composer install -n --prefer-dist

      - name: "Cache NPM dependencies"
        uses: actions/cache@v4
        with:
          path: "~/.npm"
          key: npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('package.json') }}
          restore-keys: |
            npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('package.json') }}
            npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-

      - name: "Install NPM dependencies"
        run: |
          npm ci

      - name: "Build"
        env:
          NODE_ENV: 'production'
        run: |
          npm run build

      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: "build-artifact"
          path: dist

  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Install SVN"
        uses: awalsh128/cache-apt-pkgs-action@v1.5.0
        with:
          packages: subversion
          version: ${{ env.cache-version }}

      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          name: "build-artifact"
          path: dist

      - name: WordPress Deploy
        id: deploy
        uses: 10up/action-wordpress-plugin-deploy@2.3.0
        with:
          generate-zip: true
        env:
          BUILD_DIR: dist
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}

      - name: Get the version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Rename zip artifact
        run: mv ${{ github.workspace }}/${{ github.event.repository.name }}.zip ${{ github.workspace }}/${{ github.event.repository.name }}.${{ steps.version.outputs.VERSION }}.zip

      - name: "Extract changelog"
        run: |
          sed -n '/=\s\?${{ steps.version.outputs.VERSION }}\s\?=/{:a;n;/=.*/b;p;ba}' dist/readme.txt > body.md

      - name: "Create a GitHub release"
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Version ${{ steps.version.outputs.VERSION }}
          body_path: ./body.md
          fail_on_unmatched_files: true
          files: ${{ github.workspace }}/${{ github.event.repository.name }}.${{ steps.version.outputs.VERSION }}.zip
